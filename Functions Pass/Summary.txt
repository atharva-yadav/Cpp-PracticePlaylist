ðŸ”µ Pass by Value -

â­• The call/pass by value method of passing arguments to a function copies the actual value of an argument into the formal parameter of the function. 
â­• In this case, changes made to the parameter inside the function have no effect on the argument.
â­• By default, C++ uses call by value to pass arguments. In general, this means that code within a function cannot alter the arguments used to call the function.

ðŸ”µ Pass by Reference - 

â­• The call/pass by reference method of passing arguments to a function copies the reference of an argument into the formal parameter. 
â­• Inside the function, the reference is used to access the actual argument used in the call. This means that changes made to the parameter affect the passed argument.
â­• To pass the value by reference, argument reference is passed to the functions just like any other value.

ðŸ”µ Pass by Pointer or Call by Address - 

â­• The call by pointer method of passing arguments to a function copies the address of an argument into the formal parameter. 
â­• Inside the function, the address is used to access the actual argument used in the call. This means that changes made to the parameter affect the passed argument.
â­• To pass the value by pointer, argument pointers are passed to the functions just like any other value.

